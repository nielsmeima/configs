- hosts: localhost
  become: true
  tasks:
  - name: Add VSCode ppa
    apt_repository:
      repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
      state: present
  - name: Add Docker gpg
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add Docker ppa
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
      state: present
  - name: Add Zotero gpg keys
    apt_key:
      url: https://github.com/retorquere/zotero-deb/releases/download/apt-get/deb.gpg.key
      state: present
  - name: Add Zotero ppa
    apt_repository:
      repo: deb https://github.com/retorquere/zotero-deb/releases/download/apt-get/
      state: present
  - name: Install packages
    apt:
      pkg:
      - code
      - chromium-browser
      - apt-transport-https
      - gnupg2
      - gnupg
      - ca-certificates
      - software-properties-common
      - gnupg-agent
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - bash-completion
      - python-pip
      - python3-pip
      - libpq-dev
      - jq
      - python3.7
      - graphviz 
      - libgraphviz-dev 
      - pkg-config
      - python-dev
      - python3.7-dev
      - tmux
      - fonts-powerline
      - python-apt
      - python3-apt 
      - zotero
      - zip
      - unzip
      - p7zip-full 
      - p7zip-rar
      - libnss3-tools
      - gtk+3.0 
      - webkit2gtk-4.0 
      - libusb-dev
  # - name: Set scaling factor for UI
    # shell: gsettings set org.gnome.desktop.interface text-scaling-factor 1.6 # potentially make this a variable
  - name: Install kubectl
    shell: |
      curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      chmod +x ./kubectl
      sudo install kubectl /usr/local/bin
      rm kubectl
  - name: Add kubectl bash completion
    shell: kubectl completion bash >/etc/bash_completion.d/kubectl
  - name: Install helm
    shell: |
      wget https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz
      tar -zxf helm-v3.4.2-linux-amd64.tar.gz
      sudo install linux-amd64/helm /usr/local/bin
      rm -rf linux-amd64 
      rm -rf helm-v3.4.2-linux-amd64.tar.gz
    args:
      creates: /usr/local/bin/helm
  - name: Install telepresence
    shell: |
      curl -s https://packagecloud.io/install/repositories/datawireio/telepresence/script.deb.sh | sudo bash
      sudo apt install --no-install-recommends -y telepresence
  - name: Install krew
    shell: |
      (
        set -x; cd "$(mktemp -d)" &&
        curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.{tar.gz,yaml}" &&
        tar zxvf krew.tar.gz &&
        KREW=./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" &&
        "$KREW" install --manifest=krew.yaml --archive=krew.tar.gz &&
        "$KREW" update
      )
      echo "export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"" >> ~/.bashrc
    args:
      creates: ~/.krew/bin/kubectl-krew
  - name: Install nvm
    shell: |
      curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh | bash
    become: true
    become_user: nielsmeima
  - name: Install krew plugins
    shell: |
      kubectl krew install ctx
      kubectl krew install ns
  - name: Install pgcli
    command: pip3 install pgcli
  - name: Add python binaries to path
    shell: |
      echo "export PATH=\"~/.local/bin:$PATH\"" >> ~/.bashrc
  - name: Set update alternatives for python3.6 and python 3.7
    shell: |
      sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
      sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2
      sudo update-alternatives --config python3
  - name: Install pipenv
    command: pip3 install --user pipenv 
  - name: Configure tmux
    shell: |
      touch ~/.tmux.conf
      echo "set -g prefix C-a" >> ~/.tmux.conf
      tmux source ~/.tmux.conf
  - name: Install Go
    shell: |
      curl -fsSLO https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
      tar -C /usr/local -xzf go1.14.2.linux-amd64.tar.gz
      rm go1.14.2.linux-amd64.tar.gz
      echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
    args:
      creates: /usr/local/go/bin/go
  - name: Add user to docker group
    shell: |
      sudo groupadd docker
      sudo usermod -aG docker nielsmeima
      su -s nielsmeima
  - name: Install k3d
    shell: |
      wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | INSTALL_K3S_EXEC="server --no-deploy traefik" bash
  - name: UFW - Deny all other incoming traffic by default
    ufw:
      state: enabled
      policy: deny
      direction: incoming